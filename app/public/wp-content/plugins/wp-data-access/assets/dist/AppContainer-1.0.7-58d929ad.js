import{r as o,_ as l,l as i,j as r}from"./main-1.0.7.js";import{A as m}from"./AppMetaData-1.0.7-862b01ed.js";import{v as p}from"./main-1.0.7-9bcf9658.js";import"./ActionsApp-1.0.7-d5341f25.js";import"./Alert-1.0.7-7efc1ac6.js";import"./index.esm-1.0.7-8ea9dc9a.js";import"./iconBase-1.0.7-dd244ceb.js";import"./AlertTitle-1.0.7-a2e806c7.js";import"./Close-1.0.7-d2499b42.js";import"./useSlot-1.0.7-9849c4eb.js";const s=o.lazy(()=>l(()=>import("./Alert-1.0.7-7efc1ac6.js"),["./Alert-1.0.7-7efc1ac6.js","./main-1.0.7.js","./index.esm-1.0.7-8ea9dc9a.js","./iconBase-1.0.7-dd244ceb.js","./AlertTitle-1.0.7-a2e806c7.js","./Close-1.0.7-d2499b42.js","./useSlot-1.0.7-9849c4eb.js"],import.meta.url)),_=({dataSource:t})=>{i.debug(t);let a;try{let e={};try{e=JSON.parse(t.replaceAll("'",'"'))}catch(n){return console.error("JSON parse error"),i.error(n),r.jsx(o.Suspense,{children:r.jsx(s,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}if(e.id&&!isNaN(e.id))a=e.id;else return console.error("Invalid arguments"),r.jsx(o.Suspense,{children:r.jsx(s,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}catch(e){return console.error("Invalid arguments",e),r.jsx(o.Suspense,{children:r.jsx(s,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}return r.jsx(m,{appId:p(),appDbId:a})};export{_ as default};
